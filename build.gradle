defaultTasks 'clean', 'build'
def artioJavaVersion = JavaVersion.VERSION_1_8

allprojects {
    repositories {
        mavenCentral()
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'idea'

    tasks.withType(JavaCompile) {
        sourceCompatibility = artioJavaVersion
        targetCompatibility = artioJavaVersion
        options.encoding = 'UTF-8'
        options.deprecation = true

        test {
            useJUnitPlatform()
        }
        dependencies {
            testImplementation libs.junit.jupiter.api
            testRuntimeOnly libs.junit.jupiter.engine
        }
    }

    idea {
        module {
            downloadJavadoc = true
            downloadSources = true
        }
    }
}

configure([project(':driver')]) {
    dependencies {
        implementation libs.aeron.archive
        implementation libs.aeron.driver
    }
}

configure([project(':microservice')]) {
    dependencies {
        implementation libs.agrona
        implementation libs.aeron.archive
        implementation libs.aeron.client
    }
}

configure([project(':codecs:fix-44-codecs'), project(':codecs:fix-50sp2-codecs')]) {

    dependencies {
        api libs.artio.codecs
    }

    compileJava {
        dependsOn 'generateCodecs'
    }

}

project(':codecs:fix-44-codecs') {
    def generatedDir = sourceSets.main.java.srcDirs.first()

    task generateCodecs(type: JavaExec) {
        systemProperty "fix.codecs.parent_package", "com.swiftalgo.ms.codecs.fix44"
        mainClass.set("uk.co.real_logic.artio.dictionary.CodecGenerationTool")
        classpath = sourceSets.main.compileClasspath
        args = [generatedDir, 'src/main/resources/FIX44.xml']
        inputs.file('src/main/resources/FIX44.xml')
        outputs.dir generatedDir
    }
}

project(':codecs:fix-50sp2-codecs') {
    def generatedDir = sourceSets.main.java.srcDirs.first()

    task generateCodecs(type: JavaExec) {
        systemProperty "fix.codecs.parent_package", "com.swiftalgo.ms.codecs.fix50sp2"
        mainClass.set("uk.co.real_logic.artio.dictionary.CodecGenerationTool")
        classpath = sourceSets.main.compileClasspath
        args = [generatedDir, 'src/main/resources/FIXT11.xml;src/main/resources/FIX50SP2.xml']
        inputs.files('src/main/resources/FIXT11.xml', 'src/main/resources/FIX50SP2.xml')
        outputs.dir generatedDir
    }
}

configure([project(':dma')]) {
    dependencies {
        implementation libs.aeron.archive
        implementation libs.aeron.client
        implementation libs.agrona
        implementation project(':microservice')
        implementation project(':codecs:fix-44-codecs')
    }
}

wrapper {
    gradleVersion = '7.3.3'
    distributionType = 'ALL'
}

