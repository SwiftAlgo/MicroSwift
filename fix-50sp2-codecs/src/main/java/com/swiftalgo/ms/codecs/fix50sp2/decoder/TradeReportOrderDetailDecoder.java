/* Generated Fix Gateway message codec */
package com.swiftalgo.ms.codecs.fix50sp2.decoder;

import org.agrona.AsciiNumberFormatException;
import org.agrona.MutableDirectBuffer;
import org.agrona.AsciiSequenceView;
import static uk.co.real_logic.artio.dictionary.generation.CodecUtil.*;
import static uk.co.real_logic.artio.dictionary.SessionConstants.*;
import uk.co.real_logic.artio.builder.Decoder;
import uk.co.real_logic.artio.fields.DecimalFloat;
import uk.co.real_logic.artio.util.MutableAsciiBuffer;
import uk.co.real_logic.artio.util.AsciiBuffer;
import uk.co.real_logic.artio.fields.LocalMktDateEncoder;
import uk.co.real_logic.artio.fields.UtcTimestampEncoder;
import java.nio.charset.StandardCharsets;
import java.util.Arrays;
import uk.co.real_logic.artio.dictionary.CharArraySet;
import org.agrona.collections.IntHashSet;
import org.agrona.collections.IntHashSet.IntIterator;
import uk.co.real_logic.artio.EncodingException;
import uk.co.real_logic.artio.dictionary.CharArrayWrapper;
import uk.co.real_logic.artio.builder.Encoder;
import uk.co.real_logic.artio.builder.CommonDecoderImpl;
import static java.nio.charset.StandardCharsets.US_ASCII;
import static uk.co.real_logic.artio.builder.Validation.CODEC_VALIDATION_ENABLED;
import static uk.co.real_logic.artio.builder.RejectUnknownField.CODEC_REJECT_UNKNOWN_FIELD_ENABLED;
import static uk.co.real_logic.artio.builder.RejectUnknownEnumValue.CODEC_REJECT_UNKNOWN_ENUM_VALUE_ENABLED;
import com.swiftalgo.ms.codecs.fix50sp2.*;
import com.swiftalgo.ms.codecs.fix50sp2.builder.TradeReportOrderDetailEncoder;
import com.swiftalgo.ms.codecs.fix50sp2.builder.OrderQtyDataEncoder;
import com.swiftalgo.ms.codecs.fix50sp2.builder.DisplayInstructionEncoder;

public interface TradeReportOrderDetailDecoder  extends OrderQtyDataDecoder, DisplayInstructionDecoder
{

    public char[] orderID();
    public boolean hasOrderID();
    public int orderIDLength();
    public void orderID(AsciiSequenceView view);
    public char[] secondaryOrderID();
    public boolean hasSecondaryOrderID();
    public int secondaryOrderIDLength();
    public void secondaryOrderID(AsciiSequenceView view);
    public char[] clOrdID();
    public boolean hasClOrdID();
    public int clOrdIDLength();
    public void clOrdID(AsciiSequenceView view);
    public char[] secondaryClOrdID();
    public boolean hasSecondaryClOrdID();
    public int secondaryClOrdIDLength();
    public void secondaryClOrdID(AsciiSequenceView view);
    public char[] listID();
    public boolean hasListID();
    public int listIDLength();
    public void listID(AsciiSequenceView view);
    public char[] refOrderID();
    public boolean hasRefOrderID();
    public int refOrderIDLength();
    public void refOrderID(AsciiSequenceView view);
    public char refOrderIDSource();
    public boolean hasRefOrderIDSource();
    public RefOrderIDSource refOrderIDSourceAsEnum();
    public int refOrdIDReason();
    public boolean hasRefOrdIDReason();
    public RefOrdIDReason refOrdIDReasonAsEnum();
    public char ordType();
    public boolean hasOrdType();
    public OrdType ordTypeAsEnum();
    public DecimalFloat price();
    public boolean hasPrice();
    public DecimalFloat stopPx();
    public boolean hasStopPx();
    public char[] execInst();
    public boolean hasExecInst();
    public int execInstLength();
    public void execInst(AsciiSequenceView view);
    public char ordStatus();
    public boolean hasOrdStatus();
    public OrdStatus ordStatusAsEnum();
    public DecimalFloat leavesQty();
    public boolean hasLeavesQty();
    public DecimalFloat cumQty();
    public boolean hasCumQty();
    public char timeInForce();
    public boolean hasTimeInForce();
    public TimeInForce timeInForceAsEnum();
    public byte[] expireTime();
    public boolean hasExpireTime();
    public int expireTimeLength();
    public void expireTime(AsciiSequenceView view);
    public char orderCapacity();
    public boolean hasOrderCapacity();
    public OrderCapacity orderCapacityAsEnum();
    public char[] orderRestrictions();
    public boolean hasOrderRestrictions();
    public int orderRestrictionsLength();
    public void orderRestrictions(AsciiSequenceView view);
    public int bookingType();
    public boolean hasBookingType();
    public BookingType bookingTypeAsEnum();
    public int origCustOrderCapacity();
    public boolean hasOrigCustOrderCapacity();
    public OrigCustOrderCapacity origCustOrderCapacityAsEnum();
    public char[] orderInputDevice();
    public boolean hasOrderInputDevice();
    public int orderInputDeviceLength();
    public void orderInputDevice(AsciiSequenceView view);
    public char lotType();
    public boolean hasLotType();
    public LotType lotTypeAsEnum();
    public byte[] transBkdTime();
    public boolean hasTransBkdTime();
    public int transBkdTimeLength();
    public void transBkdTime(AsciiSequenceView view);
    public byte[] origOrdModTime();
    public boolean hasOrigOrdModTime();
    public int origOrdModTimeLength();
    public void origOrdModTime(AsciiSequenceView view);

}
